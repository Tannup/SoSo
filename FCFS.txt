class FCFS {

    // Function to calculate waiting time
    static void findWaitingTime(int[] bt, int[] wt) {
        wt[0] = 0; // First process has no waiting time
        for (int i = 1; i < bt.length; i++) {
            wt[i] = bt[i - 1] + wt[i - 1]; // Cumulative waiting time
        }
    }

    // Function to calculate turnaround time
    static void findTurnAroundTime(int[] bt, int[] wt, int[] tat) {
        for (int i = 0; i < bt.length; i++) {
            tat[i] = bt[i] + wt[i]; // Turnaround time = burst time + waiting time
        }
    }

    // Function to display process details and calculate average times
    static void findAvgTime(int[] burstTime) {
        int n = burstTime.length;
        int[] wt = new int[n];
        int[] tat = new int[n];

        findWaitingTime(burstTime, wt);
        findTurnAroundTime(burstTime, wt, tat);

        int totalWt = 0, totalTat = 0;
        System.out.println("Process\tBurst Time\tWaiting Time\tTurnaround Time");
        for (int i = 0; i < n; i++) {
            totalWt += wt[i];
            totalTat += tat[i];
            System.out.printf("%d\t\t%d\t\t%d\t\t%d\n", i + 1, burstTime[i], wt[i], tat[i]);
        }

        System.out.printf("Average waiting time = %.2f\n", (float) totalWt / n);
        System.out.printf("Average turnaround time = %.2f\n", (float) totalTat / n);
    }

    public static void main(String[] args) {
        int[] burstTime = {1, 3, 2}; // Burst time of processes
        findAvgTime(burstTime);
    }
}
