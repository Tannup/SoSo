class Process {
    int AT, BT, FT, WT, TAT;
    
    public Process(int AT, int BT) {
        this.AT = AT;
        this.BT = BT;
    }
}

public class Main {
    public static void main(String[] args) {
        Process[] processes = {
            new Process(0, 3), // Process 1
            new Process(2, 6), // Process 2
            new Process(4, 4), // Process 3
            new Process(6, 5)  // Process 4
        };

        int n = processes.length;
        int time = 0, completed = 0;
        int totalWT = 0, totalTAT = 0;

        while (completed < n) {
            int shortest = -1;
            int minBT = Integer.MAX_VALUE;
            
            for (int i = 0; i < n; i++) {
                if (processes[i].AT <= time && processes[i].BT < minBT && processes[i].BT > 0) {
                    minBT = processes[i].BT;
                    shortest = i;
                }
            }
            
            if (shortest == -1) {
                time++;
                continue;
            }
            
            time += processes[shortest].BT;
            processes[shortest].BT = 0;
            processes[shortest].FT = time;
            processes[shortest].WT = processes[shortest].FT - processes[shortest].AT - minBT;
            processes[shortest].TAT = processes[shortest].WT + minBT;

            totalWT += processes[shortest].WT;
            totalTAT += processes[shortest].TAT;
            completed++;
        }

        System.out.println("Process | Arrival | Finish | Wait | Turnaround");
        System.out.println("---------------------------------------------");
        for (int i = 0; i < n; i++) {
            System.out.printf("   %d    |    %d    |   %d   |  %d  |    %d\n",
                              i + 1, processes[i].AT, processes[i].FT,
                              processes[i].WT, processes[i].TAT);
        }
        
        System.out.printf("\nAverage Wait Time: %.2f", (double) totalWT / n);
        System.out.printf("\nAverage Turnaround Time: %.2f\n", (double) totalTAT / n);
    }
}
